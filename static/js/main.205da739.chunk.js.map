{"version":3,"sources":["components/Form.js","components/Todo.js","components/List.js","App.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","Container","fluid","Row","Col","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","List","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoFromLocal","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.205da739.chunk.js","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\n    const inputTextHandler = (e) => {\n        // console.log(e.target.value)\n        setInputText(e.target.value)\n    }\n    const submitTodoHandler = (e) => {\n        e.preventDefault()\n        setTodos([\n            ...todos, \n                {text: inputText, completed: false, id: Math.random () * 1000}\n        ])\n        setInputText('')\n    }\n    const statusHandler = (e) => {\n        setStatus(e.target.value)\n    }\n    return(\n        <Container fluid>\n            <Row>\n                <Col>\n                 <form>\n                    <input value = {inputText}\n                            onChange = {inputTextHandler} \n                            type = \"text\" \n                            className=\"todo-input\" />\n                {/* <label for=\"date\"> Date:</label>\n                <input type=\"date\" id=\"date\" name=\"date\" />\n                <input type=\"submit\" />  */}\n            <button onClick = {submitTodoHandler} className=\"todo-button\" type=\"submit\">\n              <i className=\"fas fa-plus-square\"></i>\n            </button>\n        <Row>\n            <Col>\n                <div className=\"select\">\n                <select onChange={statusHandler} name=\"todo-items\" className=\"filter-todo\">\n                    <option value=\"all\">All</option>\n                    <option value=\"Complete\">Complete</option>\n                    <option value=\"Incomplete\">Incomplete</option>\n                </select>\n            </div>\n            </Col>\n        </Row>\n          \n          {/* <div className=\"importance\">\n              <select name=\"todo-importance\" className=\"filter-importance\">\n                  <option value=\"very\">Very Important</option>\n                  <option value=\"somewhat\">Somewhat Important</option>\n                  <option value=\"low\">Not Important</option>\n              </select>\n          </div> */}\n        </form>  \n    </Col>\n</Row>\n         \n        </Container>\n    )\n}\n\nexport default Form","import React from 'react'\n\nconst Todo = ({ text, todo, todos, setTodos }) => {\n    // Events\n\n    // Delete Event\n    const deleteHandler = () => {\n        setTodos(todos.filter((el) => el.id !== todo.id))\n    };\n\n    // Complete Event\n    const completeHandler = () => {\n        setTodos(todos.map(item => {\n            if(item.id === todo.id){\n                return{\n                    ...item, \n                    completed: !item.completed\n                }\n            }\n            return item\n        })\n        )\n    }\n\n    return(\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\": ''}`}>{text}</li>\n            <button onClick={completeHandler} className=\"complete-btn\">\n                <i className=\"fas-fa-check\"></i>\n            </button>\n            <button onClick={deleteHandler} className=\"trash-btn\">\n                <i className=\"fas-fa-trash\"></i>\n            </button>\n        </div>\n    )\n}\n\nexport default Todo","import React from 'react'\nimport Todo from './Todo'\n\nconst List = ({ todos,setTodos, filteredTodos }) => {\n\n    return(\n      <div className=\"todo-container\">\n        <ul className=\"todo-list\">\n          {filteredTodos.map(todo => (\n            <Todo \n              setTodos={setTodos}\n              todos = {todos}\n              key = {todo.id}\n              todo={todo}\n              text = {todo.text} />\n          ))}\n        </ul>\n    </div>  \n    )\n}\n\nexport default List","import React, { useState, useEffect } from 'react';\nimport Form from './components/Form'\nimport List from './components/List'\nimport './App.css';\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction App() {\n  \n  // State items\n  const [inputText, setInputText] = useState (\"\");\n  const [todos, setTodos] = useState ([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  // Run once when the app starts\n  useEffect(() => {\n    getLocalTodos()\n  }, [])\n\n// Use Effect for filterHandler\nuseEffect(() => {\n  const filterHandler = () => {\n    switch(status){\n      case 'complete':\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n      case 'incomplete':\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break\n    };\n  };\n\n  filterHandler()\n  saveLocalTodos()\n}, [todos, status])\n\n// Save to local storage\n  const saveLocalTodos = () => {\n      localStorage.setItem('todos', JSON.stringify([]))\n  }\n  const getLocalTodos = () => {\n    if(localStorage.getItem('todos') === null){\n      localStorage.setItem('todos', JSON.stringify([]))\n    }else{\n      let todoFromLocal = JSON.parse(localStorage.getItem('todos'))\n      setTodos(todoFromLocal)\n    }\n  }\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n        <div className=\"App\">\n      <header>\n        <h1> To-Do List </h1>\n      </header>\n      <Form  \n            inputText = {inputText}\n            todos = {todos} \n            setTodos = {setTodos} \n            setInputText = {setInputText}\n            setStatus={setStatus}\n            />\n      <List \n            setTodos = {setTodos}\n            todos = {todos}\n            filteredTodos={filteredTodos}\n            />\n    </div>\n        </Col>\n      </Row>\n    </Container>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}